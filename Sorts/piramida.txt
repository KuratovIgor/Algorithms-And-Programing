#include <iostream>
#include <ctime>

using namespace std;

void proseivanie(int arr[], int i, const int n, const bool boolValue);

void fillArray(int arr[], const int size)
{
	srand((unsigned)time(NULL));
	bool check = false;
	int i = 0;
	while (i < size)
	{
		int newValue = rand() % size;
		for (int j = 0; j < i; j++)
		{
			if (newValue == arr[j])
			{
				check = true;
				break;
			}
			else
			{
				check = false;
			}
		}
		if (check == false)
		{
			arr[i] = newValue;
			i++;
		}
	}
}
void printArray(int arr[], const int size)
{
	for (int i = 0; i < size; i++)
	{
		cout << arr[i] << '\t';
	}
	cout << endl;
}


int main()
{
	setlocale(LC_ALL, "ru");

	int N = 0;
	cout << "Введите размер массива: ";
	cin >> N;

	int* array = new int[N];

	fillArray(array, N);
	printArray(array, N);

	int ind = trunc((N - 1) / 2);
	bool piramidIsBuilding = false;
	while (ind >= 0)
	{
		proseivanie(array, ind, N - 1, piramidIsBuilding);
		ind -= 1;
	}
	printArray(array, N);
	piramidIsBuilding = true;

	ind = N - 1;
	while (ind > 0)
	{
		int buf = array[0];
		array[0] = array[ind];
		array[ind] = buf;
		ind -= 1;
		proseivanie(array, 0, ind, piramidIsBuilding);
	}

	printArray(array, N);

	delete[] array;

	return 0;
}

void proseivanie(int arr[], int i, const int n, const bool boolValue)
{
	int r = 0;
	while (2 * i + 1 <= n)
	{
		r = 2 * i + 1;
		if (r + i <= n && arr[r] < arr[r + 1])
		{
			if (boolValue == false) r += 1;
			else if (n > 1) r += 1;
		}
		if (arr[i] < arr[r])
		{
			int buf = arr[i];
			arr[i] = arr[r];
			arr[r] = buf;
			i = r;
		}
		else break;
	}
}